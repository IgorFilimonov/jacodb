plugins {
    id "de.undercouch.download" version "5.3.0"
}

dependencies {
    api project(":jcdb-api")

    api group: 'io.github.microutils', name: 'kotlin-logging', version: '1.8.3'
    api group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    api group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    api group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-cbor', version: '1.3.3'
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.39.2.1'
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

    implementation group: 'org.jooq', name: 'jooq', version: jooq_version

    testImplementation project(':jcdb-testing')
    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter'
    testImplementation "org.unittestbot.soot:soot-utbot-fork:4.4.0-FORK-2"

    testImplementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-benchmark-runtime', version: '0.4.4'
}

task downloadIdeaCommunity(type: Download) {
    src intellij_community_url
    dest "idea-community/idea-community.zip"
}

task downloadAndUnzipIdeaCommunity(dependsOn: downloadIdeaCommunity, type: Copy) {
    from zipTree(downloadIdeaCommunity.dest)
    into "idea-community/unzip"
}

benchmark {
    configurations {
        main {
            exclude("JcdbBenchmarks")
            exclude("SootBenchmarks")
        }
        jcdb {
            include("JcdbBenchmarks")
        }
        soot {
            include("SootBenchmarks")
        }
        awaitBackground {
            include("JcdbJvmBackgroundBenchmarks")
            include("JcdbAllClasspathBackgroundBenchmarks")
            include("JcdbIdeaBackgroundBenchmarks")
        }
    }
}

def benchmarkTasks = ["jcdbBenchmarkJar", "sootBenchmarkJar"]
tasks.matching { benchmarkTasks.contains(it.name) }.configureEach {
    dependsOn(":downloadAndUnzipIdeaCommunity")
}