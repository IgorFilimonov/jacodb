/*
 * This file is generated by jOOQ.
 */
package org.utbot.jcdb.impl.storage.jooq.tables.records


import org.jooq.Field
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.TableRecordImpl
import org.utbot.jcdb.impl.storage.jooq.tables.Calls


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CallsRecord() : TableRecordImpl<CallsRecord>(Calls.CALLS), Record6<Long?, String?, Long?, Int?, Long?, Long?> {

    var calleeClassHash: Long?
        set(value) = set(0, value)
        get() = get(0) as Long?

    var calleeName: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var calleeDescHash: Long?
        set(value) = set(2, value)
        get() = get(2) as Long?

    var opcode: Int?
        set(value) = set(3, value)
        get() = get(3) as Int?

    var callerClassHash: Long?
        set(value) = set(4, value)
        get() = get(4) as Long?

    var locationId: Long?
        set(value) = set(5, value)
        get() = get(5) as Long?

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Long?, String?, Long?, Int?, Long?, Long?> = super.fieldsRow() as Row6<Long?, String?, Long?, Int?, Long?, Long?>
    override fun valuesRow(): Row6<Long?, String?, Long?, Int?, Long?, Long?> = super.valuesRow() as Row6<Long?, String?, Long?, Int?, Long?, Long?>
    override fun field1(): Field<Long?> = Calls.CALLS.CALLEE_CLASS_HASH
    override fun field2(): Field<String?> = Calls.CALLS.CALLEE_NAME
    override fun field3(): Field<Long?> = Calls.CALLS.CALLEE_DESC_HASH
    override fun field4(): Field<Int?> = Calls.CALLS.OPCODE
    override fun field5(): Field<Long?> = Calls.CALLS.CALLER_CLASS_HASH
    override fun field6(): Field<Long?> = Calls.CALLS.LOCATION_ID
    override fun component1(): Long? = calleeClassHash
    override fun component2(): String? = calleeName
    override fun component3(): Long? = calleeDescHash
    override fun component4(): Int? = opcode
    override fun component5(): Long? = callerClassHash
    override fun component6(): Long? = locationId
    override fun value1(): Long? = calleeClassHash
    override fun value2(): String? = calleeName
    override fun value3(): Long? = calleeDescHash
    override fun value4(): Int? = opcode
    override fun value5(): Long? = callerClassHash
    override fun value6(): Long? = locationId

    override fun value1(value: Long?): CallsRecord {
        this.calleeClassHash = value
        return this
    }

    override fun value2(value: String?): CallsRecord {
        this.calleeName = value
        return this
    }

    override fun value3(value: Long?): CallsRecord {
        this.calleeDescHash = value
        return this
    }

    override fun value4(value: Int?): CallsRecord {
        this.opcode = value
        return this
    }

    override fun value5(value: Long?): CallsRecord {
        this.callerClassHash = value
        return this
    }

    override fun value6(value: Long?): CallsRecord {
        this.locationId = value
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: Long?, value4: Int?, value5: Long?, value6: Long?): CallsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised CallsRecord
     */
    constructor(calleeClassHash: Long? = null, calleeName: String? = null, calleeDescHash: Long? = null, opcode: Int? = null, callerClassHash: Long? = null, locationId: Long? = null): this() {
        this.calleeClassHash = calleeClassHash
        this.calleeName = calleeName
        this.calleeDescHash = calleeDescHash
        this.opcode = opcode
        this.callerClassHash = callerClassHash
        this.locationId = locationId
    }
}
