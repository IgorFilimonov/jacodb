/*
 * This file is generated by jOOQ.
 */
package org.utbot.jcdb.impl.storage.jooq.keys


import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.utbot.jcdb.impl.storage.jooq.tables.Annotations
import org.utbot.jcdb.impl.storage.jooq.tables.Annotationvalues
import org.utbot.jcdb.impl.storage.jooq.tables.Bytecodelocations
import org.utbot.jcdb.impl.storage.jooq.tables.Classes
import org.utbot.jcdb.impl.storage.jooq.tables.Classhierarchies
import org.utbot.jcdb.impl.storage.jooq.tables.Classinnerclasses
import org.utbot.jcdb.impl.storage.jooq.tables.Fields
import org.utbot.jcdb.impl.storage.jooq.tables.Methodparameters
import org.utbot.jcdb.impl.storage.jooq.tables.Methods
import org.utbot.jcdb.impl.storage.jooq.tables.Outerclasses
import org.utbot.jcdb.impl.storage.jooq.tables.Symbols
import org.utbot.jcdb.impl.storage.jooq.tables.records.AnnotationsRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.AnnotationvaluesRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.BytecodelocationsRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.ClassesRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.ClasshierarchiesRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.ClassinnerclassesRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.FieldsRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.MethodparametersRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.MethodsRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.OuterclassesRecord
import org.utbot.jcdb.impl.storage.jooq.tables.records.SymbolsRecord



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val ANNOTATIONS__: UniqueKey<AnnotationsRecord> = Internal.createUniqueKey(Annotations.ANNOTATIONS, DSL.name(""), arrayOf(Annotations.ANNOTATIONS.ID), true)
val ANNOTATIONVALUES__: UniqueKey<AnnotationvaluesRecord> = Internal.createUniqueKey(Annotationvalues.ANNOTATIONVALUES, DSL.name(""), arrayOf(Annotationvalues.ANNOTATIONVALUES.ID), true)
val BYTECODELOCATIONS__: UniqueKey<BytecodelocationsRecord> = Internal.createUniqueKey(Bytecodelocations.BYTECODELOCATIONS, DSL.name(""), arrayOf(Bytecodelocations.BYTECODELOCATIONS.ID), true)
val CLASSES__: UniqueKey<ClassesRecord> = Internal.createUniqueKey(Classes.CLASSES, DSL.name(""), arrayOf(Classes.CLASSES.ID), true)
val CLASSHIERARCHIES__: UniqueKey<ClasshierarchiesRecord> = Internal.createUniqueKey(Classhierarchies.CLASSHIERARCHIES, DSL.name(""), arrayOf(Classhierarchies.CLASSHIERARCHIES.ID), true)
val CLASSINNERCLASSES__: UniqueKey<ClassinnerclassesRecord> = Internal.createUniqueKey(Classinnerclasses.CLASSINNERCLASSES, DSL.name(""), arrayOf(Classinnerclasses.CLASSINNERCLASSES.ID), true)
val FIELDS__: UniqueKey<FieldsRecord> = Internal.createUniqueKey(Fields.FIELDS, DSL.name(""), arrayOf(Fields.FIELDS.ID), true)
val METHODPARAMETERS__: UniqueKey<MethodparametersRecord> = Internal.createUniqueKey(Methodparameters.METHODPARAMETERS, DSL.name(""), arrayOf(Methodparameters.METHODPARAMETERS.ID), true)
val METHODS__: UniqueKey<MethodsRecord> = Internal.createUniqueKey(Methods.METHODS, DSL.name(""), arrayOf(Methods.METHODS.ID), true)
val OUTERCLASSES__: UniqueKey<OuterclassesRecord> = Internal.createUniqueKey(Outerclasses.OUTERCLASSES, DSL.name(""), arrayOf(Outerclasses.OUTERCLASSES.ID), true)
val SYMBOLS__: UniqueKey<SymbolsRecord> = Internal.createUniqueKey(Symbols.SYMBOLS, DSL.name(""), arrayOf(Symbols.SYMBOLS.ID), true)
